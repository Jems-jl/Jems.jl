var documenterSearchIndex = {"docs":
[{"location":"Opacity/#StellarOpacity","page":"StellarOpacity","title":"StellarOpacity","text":"","category":"section"},{"location":"Opacity/","page":"StellarOpacity","title":"StellarOpacity","text":"Modules = [Jems.Opacity]","category":"page"},{"location":"Opacity/#Jems.Opacity.get_opacity_resultsTP-Union{Tuple{TT}, Tuple{Jems.Opacity.SimpleElectronScatteringOpacity, Dict{Symbol, Jems.Chem.Isotope}, TT, TT, Vector{<:TT}, Vector{Symbol}}} where TT<:Real","page":"StellarOpacity","title":"Jems.Opacity.get_opacity_resultsTP","text":"get_opacity_resultsTP(opacity::SimpleElectronScatteringOpacity, isotope_data::Dict{Symbol, Isotope},\n    lnT::TT, lnP::TT, xa::Vector{<:TT}, species::Vector{Symbol})::TT where{TT<:Real}\n\nEvaluates the opacity of the current mixture with mass fractions xa, species symbols species (both these should be of length nspecies), the natural log of temperature and pressure lnT, lnP, the  opacity law opacity and the isotope_data dictionary.\n\n\n\n\n\n","category":"method"},{"location":"Evolution/#StellarEvolution","page":"StellarEvolution","title":"StellarEvolution","text":"","category":"section"},{"location":"Evolution/","page":"StellarEvolution","title":"StellarEvolution","text":"The StellarEvolution module contains the basic tools needed to combine all other modules to perform stellar evolution. It allows a fully customizable definition of the equations that are solved together with their boundary conditions.","category":"page"},{"location":"Evolution/","page":"StellarEvolution","title":"StellarEvolution","text":"Pages = [\"Evolution.md\"]","category":"page"},{"location":"Evolution/","page":"StellarEvolution","title":"StellarEvolution","text":"A model is initialized by specifying its independent variables and equations. The following creates a model with a basic ideal gas EOS and electron scattering opacity, which is then initialized using an n=1 polytrope of 1M_odot and 100R_odot. Options for a simulation can be specified with a toml file. Below we directly create a file with custom options and then load it up into the model. After setting everything up the simulation is run.","category":"page"},{"location":"Evolution/","page":"StellarEvolution","title":"StellarEvolution","text":"using Jems.Evolution\nusing Jems.EOS\nusing Jems.Opacity\nusing Jems.Constants\n\nnvars = 6\nnspecies = 2\nvarnames = [:lnP, :lnT, :lnr, :lum, :H1, :He4]\nstructure_equations=[Evolution.equationHSE, Evolution.equationT,\n                        Evolution.equationContinuity, Evolution.equationLuminosity,\n                        Evolution.equationH1, Evolution.equationHe4]\nnz = 1000\neos = EOS.IdealEOS(false)\nopacity = Opacity.SimpleElectronScatteringOpacity()\nsm = StellarModel(varnames, structure_equations, nvars, nspecies, nz, eos, opacity)\n\n#Initialize the model as n=1 polytrope with an initial timestep of 10 years\nEvolution.n1_polytrope_initial_condition(sm, MSUN, 100*RSUN; initial_dt=10*SECYEAR)\n\n#Load custom options\nopen(\"options.toml\",\"w\") do file\n    write(file,\"\"\"\n            [termination]\n            max_model_number = 300\n\"\"\")\nend\nEvolution.set_options!(sm.opt, \"options.toml\")\n\n#run simulation\n#Evolution.do_evolution_loop(sm)","category":"page"},{"location":"Evolution/","page":"StellarEvolution","title":"StellarEvolution","text":"The results of the simulation are provided in HDF5 format.","category":"page"},{"location":"Evolution/#StellarModel.jl","page":"StellarEvolution","title":"StellarModel.jl","text":"","category":"section"},{"location":"Evolution/","page":"StellarEvolution","title":"StellarEvolution","text":"Modules = [Jems.Evolution]\nPages = [\"Evolution/StellarModel.jl\"]","category":"page"},{"location":"Evolution/#Jems.Evolution.StellarModel","page":"StellarEvolution","title":"Jems.Evolution.StellarModel","text":"mutable struct StellarModel\n\nAn evolutionary model for a star, containing information about the star's current state, as well as the independent  variables of the model and its equations.\n\n\n\n\n\n","category":"type"},{"location":"Evolution/#Jems.Evolution.StellarModel-Tuple{Vector{Symbol}, Vector{Function}, Int64, Int64, Int64, Jems.EOS.AbstractEOS, Jems.Opacity.AbstractOpacity}","page":"StellarEvolution","title":"Jems.Evolution.StellarModel","text":"StellarModel(varnames::Vector{Symbol}, structure_equations::Vector{Function}, nvars::Int, \nnspecies::Int, nz::Int, eos::AbstractEOS, opacity::AbstractOpacity)\n\nConstructor for a StellarModel instance, using varnames for the independent variables, functions of the  structure_equations to be solved, number of independent variables nvars, number of species in the network nspecies number of zones in the model nz and an iterface to the EOS and Opacity laws.\n\n\n\n\n\n","category":"method"},{"location":"Evolution/#Jems.Evolution.StellarStepInfo","page":"StellarEvolution","title":"Jems.Evolution.StellarStepInfo","text":"mutable struct StellarStepInfo\n\nInformation used for a simulation step. A single stellar model can have three different objects of type StellarStepInfo, containing information from the previous step, information right before the Newton solver, and information after the Newton solver has completed.\n\n\n\n\n\n","category":"type"},{"location":"Evolution/#Options.jl","page":"StellarEvolution","title":"Options.jl","text":"","category":"section"},{"location":"Evolution/","page":"StellarEvolution","title":"StellarEvolution","text":"Modules = [Jems.Evolution]\nPages = [\"Evolution/Options.jl\"]","category":"page"},{"location":"Evolution/#Equations.jl","page":"StellarEvolution","title":"Equations.jl","text":"","category":"section"},{"location":"Evolution/","page":"StellarEvolution","title":"StellarEvolution","text":"Modules = [Jems.Evolution]\nPages = [\"Evolution/Equations.jl\"]","category":"page"},{"location":"Evolution/#Solver.jl","page":"StellarEvolution","title":"Solver.jl","text":"","category":"section"},{"location":"Evolution/","page":"StellarEvolution","title":"StellarEvolution","text":"Modules = [Jems.Evolution]\nPages = [\"Evolution/Solver.jl\"]","category":"page"},{"location":"Evolution/#Jems.Evolution.eval_cell_eqs-Union{Tuple{TT}, Tuple{Jems.Evolution.StellarModel, Int64, Vector{<:TT}}} where TT<:Real","page":"StellarEvolution","title":"Jems.Evolution.eval_cell_eqs","text":"eval_cell_eqs(sm::StellarModel, k::Int, ind_vars_view::Vector{<:TT}) where{TT<:Real}\n\nEvaluates the stellar structure equations of the stellar model, sm, at cell k, given the view of the independent variables, ind_vars_view.\n\n\n\n\n\n","category":"method"},{"location":"Evolution/#Jems.Evolution.eval_eqs!-Tuple{Jems.Evolution.StellarModel}","page":"StellarEvolution","title":"Jems.Evolution.eval_eqs!","text":"eval_eqs(sm::StellarModel)\n\nEvaluates the stellar structure equations of the stellar model, sm, for all cells.\n\n\n\n\n\n","category":"method"},{"location":"Evolution/#Jems.Evolution.eval_jacobian!-Tuple{Jems.Evolution.StellarModel}","page":"StellarEvolution","title":"Jems.Evolution.eval_jacobian!","text":"eval_jacobian!(sm::StellarModel)\n\nEvaluates the whole Jacobian matrix of the given StellarModel sm.\n\n\n\n\n\n","category":"method"},{"location":"Evolution/#Jems.Evolution.eval_jacobian_row!-Tuple{Jems.Evolution.StellarModel, Int64}","page":"StellarEvolution","title":"Jems.Evolution.eval_jacobian_row!","text":"eval_jacobian_row!(sm::StellarModel, k::int)\n\nEvaluates row k of the Jacobian matrix of the given StellarModel sm.\n\n\n\n\n\n","category":"method"},{"location":"Evolution/#EvolutionLoop.jl","page":"StellarEvolution","title":"EvolutionLoop.jl","text":"","category":"section"},{"location":"Evolution/","page":"StellarEvolution","title":"StellarEvolution","text":"Modules = [Jems.Evolution]\nPages = [\"Evolution/EvolutionLoop.jl\"]","category":"page"},{"location":"Evolution/#Jems.Evolution.cycle_step_info!-Tuple{Jems.Evolution.StellarModel}","page":"StellarEvolution","title":"Jems.Evolution.cycle_step_info!","text":"cycle_step_info!(sm::StellarModel)\n\nMoves the model info of the StellarModel sm over one state: start step info -> end step info -> previous step info -> start step info\n\n\n\n\n\n","category":"method"},{"location":"Evolution/#Jems.Evolution.do_evolution_loop-Tuple{Jems.Evolution.StellarModel}","page":"StellarEvolution","title":"Jems.Evolution.do_evolution_loop","text":"do_evolution_loop(sm::StellarModel)\n\nPerforms the main evolutionary loop of the input StellarModel sm. It continues taking steps until one of the termination criteria is reached (defined in sm.opt.termination)\n\n\n\n\n\n","category":"method"},{"location":"Evolution/#Jems.Evolution.get_dt_next-Tuple{Jems.Evolution.StellarModel}","page":"StellarEvolution","title":"Jems.Evolution.get_dt_next","text":"get_dt_next(sm::StellarModel)\n\nComputes the timestep of the next evolutionary step to be taken by the StellarModel sm.\n\n\n\n\n\n","category":"method"},{"location":"Evolution/#Jems.Evolution.set_end_step_info!-Tuple{Jems.Evolution.StellarModel}","page":"StellarEvolution","title":"Jems.Evolution.set_end_step_info!","text":"set_end_step_info(sm::StellarModel)\n\nSets the end step info (sm.esi) from current state of the StellarModel sm.\n\n\n\n\n\n","category":"method"},{"location":"Evolution/#Jems.Evolution.set_start_step_info!-Tuple{Jems.Evolution.StellarModel}","page":"StellarEvolution","title":"Jems.Evolution.set_start_step_info!","text":"set_start_step_info!(sm::StellarModel)\n\nSets the start step info of the StellarModel sm.\n\n\n\n\n\n","category":"method"},{"location":"Evolution/#InitialCondition.jl","page":"StellarEvolution","title":"InitialCondition.jl","text":"","category":"section"},{"location":"Evolution/","page":"StellarEvolution","title":"StellarEvolution","text":"Modules = [Jems.Evolution]\nPages = [\"Evolution/InitialCondition.jl\"]","category":"page"},{"location":"Evolution/#IO.jl","page":"StellarEvolution","title":"IO.jl","text":"","category":"section"},{"location":"Evolution/","page":"StellarEvolution","title":"StellarEvolution","text":"Modules = [Jems.Evolution]\nPages = [\"Evolution/IO.jl\"]","category":"page"},{"location":"Evolution/#Jems.Evolution.history_get_ind_vars_edge_value-Tuple{Jems.Evolution.StellarModel, Symbol, Symbol}","page":"StellarEvolution","title":"Jems.Evolution.history_get_ind_vars_edge_value","text":"history_get_ind_vars_edge_value(sm::StellarModel, var_symbol::Symbol, edge::Symbol)\n\nReturns the value of the independent variable var_symbol at either the surface or the center of the StellarModel sm. edge can be either :surface or :center.    \n\n\n\n\n\n","category":"method"},{"location":"Evolution/#Jems.Evolution.profile_get_ind_vars_value-Tuple{Jems.Evolution.StellarModel, Symbol, Int64}","page":"StellarEvolution","title":"Jems.Evolution.profile_get_ind_vars_value","text":"profile_get_ind_vars_value(sm::StellarModel, var_symbol::Symbol, k::Int)\n\nReturns the value of the variable Symbol var_symbol at cell number k of the StellarModel sm.\n\n\n\n\n\n","category":"method"},{"location":"Constants/#StellarConstants","page":"StellarConstants","title":"StellarConstants","text":"","category":"section"},{"location":"Constants/","page":"StellarConstants","title":"StellarConstants","text":"StellarConstants documentation","category":"page"},{"location":"Constants/","page":"StellarConstants","title":"StellarConstants","text":"Modules = [Jems.Constants]","category":"page"},{"location":"Chem/#StellarChem","page":"StellarChem","title":"StellarChem","text":"","category":"section"},{"location":"Chem/","page":"StellarChem","title":"StellarChem","text":"Documentation for StellarChem","category":"page"},{"location":"Chem/","page":"StellarChem","title":"StellarChem","text":"Modules = [Jems.Chem]","category":"page"},{"location":"Chem/#Jems.Chem.Isotope","page":"StellarChem","title":"Jems.Chem.Isotope","text":"struct Isotope\n\nContains basic info of an isotope:\n\nZ: atomic number (# protons)\nA: mass number (# protons + neutrons)\nname: its name (eg Hydrogen)\nmass: atomic weight in amu\n\n\n\n\n\n","category":"type"},{"location":"Chem/#Jems.Chem.get_isotope_list-Tuple{}","page":"StellarChem","title":"Jems.Chem.get_isotope_list","text":"get_isotope_list()\n\ngets a list of all currently included isotopes.\n\n\n\n\n\n","category":"method"},{"location":"EOS/#StellarEOS","page":"StellarEOS","title":"StellarEOS","text":"","category":"section"},{"location":"EOS/","page":"StellarEOS","title":"StellarEOS","text":"Modules = [Jems.EOS]","category":"page"},{"location":"EOS/#Jems.EOS.IdealEOS","page":"StellarEOS","title":"Jems.EOS.IdealEOS","text":"struct IdealEOS <: AbstractEOS\n\nInterface of an Ideal gas equation of state\n\n\n\n\n\n","category":"type"},{"location":"EOS/#Jems.EOS.get_EOS_resultsTP-Union{Tuple{TT}, Tuple{Jems.EOS.IdealEOS, Dict{Symbol, Jems.Chem.Isotope}, TT, TT, Vector{<:TT}, Vector{Symbol}}} where TT<:Real","page":"StellarEOS","title":"Jems.EOS.get_EOS_resultsTP","text":"get_EOS_resultsTP(eos, isotope_data, lnT, lnP, xa, species)\n\ncomputes thermodynamical quantities of a mixture xa at temperature lnT and pressure lnP, given the ideal equation of state eos, isotope_data and list of species.\n\n\n\n\n\n","category":"method"},{"location":"EOS/#Jems.EOS.get_μ_IdealEOS-Union{Tuple{TT}, Tuple{Dict{Symbol, Jems.Chem.Isotope}, Vector{<:TT}, Vector{Symbol}}} where TT<:Real","page":"StellarEOS","title":"Jems.EOS.get_μ_IdealEOS","text":"get_μ_IdealEOS(isotope_data, xa, species)\n\ncomputes the molecular weight of the mixture xa, given the isotope_data and list of species\n\n\n\n\n\n","category":"method"},{"location":"","page":"Home","title":"Home","text":"CurrentModule = Jems","category":"page"},{"location":"#Jems.jl","page":"Home","title":"Jems.jl","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Documentation for Jems.","category":"page"},{"location":"","page":"Home","title":"Home","text":"Jems.jl contains the following modules:","category":"page"},{"location":"","page":"Home","title":"Home","text":"Pages = [\n    \"Chem.md\",\n    \"Constants.md\",\n    \"EOS.md\",\n    \"Evolution.md\",\n    \"Opacity.md\",\n]","category":"page"}]
}
